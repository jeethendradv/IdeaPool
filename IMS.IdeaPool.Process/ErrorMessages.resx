<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="101" xml:space="preserve">
    <value>Enter the email and password</value>
  </data>
  <data name="102" xml:space="preserve">
    <value>Enter the email</value>
  </data>
  <data name="103" xml:space="preserve">
    <value>Enter the password</value>
  </data>
  <data name="104" xml:space="preserve">
    <value>Invalid Credentials</value>
  </data>
  <data name="105" xml:space="preserve">
    <value>The first name is required</value>
  </data>
  <data name="106" xml:space="preserve">
    <value>The last name is required</value>
  </data>
  <data name="107" xml:space="preserve">
    <value>The password is required</value>
  </data>
  <data name="108" xml:space="preserve">
    <value>Please retype the password</value>
  </data>
  <data name="109" xml:space="preserve">
    <value>The passwords do not match</value>
  </data>
  <data name="110" xml:space="preserve">
    <value>The company name is required</value>
  </data>
  <data name="111" xml:space="preserve">
    <value>The email address is required</value>
  </data>
  <data name="112" xml:space="preserve">
    <value>The phone is required</value>
  </data>
  <data name="113" xml:space="preserve">
    <value>The email address is already registered in the system</value>
  </data>
  <data name="114" xml:space="preserve">
    <value>Please enter a valid email address</value>
  </data>
  <data name="115" xml:space="preserve">
    <value>Please select the field of water</value>
  </data>
  <data name="116" xml:space="preserve">
    <value>Password must be minimum 6 characters and maximum 10 characters long, with one lowercase character, one uppercase character and two numbers.</value>
  </data>
  <data name="117" xml:space="preserve">
    <value>Please enter a valid phone number</value>
  </data>
  <data name="118" xml:space="preserve">
    <value>Account not activated.</value>
  </data>
  <data name="119" xml:space="preserve">
    <value>Title is required.</value>
  </data>
  <data name="120" xml:space="preserve">
    <value>{field} should be less than {length} characters long.</value>
  </data>
  <data name="121" xml:space="preserve">
    <value>Idea description is required.</value>
  </data>
  <data name="122" xml:space="preserve">
    <value>Maximum of 5 files can be uploaded and each file should not exceed 2Mb in size.</value>
  </data>
  <data name="123" xml:space="preserve">
    <value>Please enter the field of water.</value>
  </data>
  <data name="124" xml:space="preserve">
    <value>Reset password link has expired. Enter your email to generate a new password reset link.</value>
  </data>
  <data name="125" xml:space="preserve">
    <value>Password reset successfully.</value>
  </data>
  <data name="126" xml:space="preserve">
    <value>User registered successfully. Please check your email to activate the account.</value>
  </data>
  <data name="127" xml:space="preserve">
    <value>Password reset link has been sent to your email.</value>
  </data>
  <data name="128" xml:space="preserve">
    <value>Account activated successfully.</value>
  </data>
  <data name="129" xml:space="preserve">
    <value>Unable to activate the account. Please contact the support centre.</value>
  </data>
  <data name="130" xml:space="preserve">
    <value>Thank you for submitting your idea.</value>
  </data>
  <data name="131" xml:space="preserve">
    <value>Idea status updated successfully.</value>
  </data>
  <data name="132" xml:space="preserve">
    <value>Reason is required.</value>
  </data>
  <data name="133" xml:space="preserve">
    <value>Idea details updated successfully.</value>
  </data>
  <data name="134" xml:space="preserve">
    <value>Field is required.</value>
  </data>
  <data name="135" xml:space="preserve">
    <value>{field} cannot exceed the maximum value of {limit}</value>
  </data>
  <data name="136" xml:space="preserve">
    <value>Value must be numeric.</value>
  </data>
  <data name="137" xml:space="preserve">
    <value>Idea has been saved as draft.</value>
  </data>
  <data name="138" xml:space="preserve">
    <value>Idea title already exists.</value>
  </data>
  <data name="139" xml:space="preserve">
    <value>Idea description already exists</value>
  </data>
</root>